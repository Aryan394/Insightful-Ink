{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/Developer/blog app using react/clientside/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch(\"http://localhost:4000/login\", {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Login\",\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"akJCtea06E3X9APQvCKcOXGIZ6s=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","Navigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/aryan/Developer/blog app using react/clientside/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function LoginPage(){\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    async function login(ev){\n        ev.preventDefault();\n        const response= await fetch(\"http://localhost:4000/login\", {\n            method: 'POST',\n            body: JSON.stringify({username, password}), \n            headers:{'Content-Type': 'application/json'},\n            credentials:'include',\n        });\n        if(response.ok){\n            setRedirect(true);\n        }\n    }\n    if(redirect){\n        return(<Navigate to={'/'}/>)\n    }\n    return(\n        <div>\n            <form className=\"Login\" onSubmit={login}>\n                <h1>Login</h1>\n                <input type=\"text\" placeholder=\"Username\" value={username} onChange={ev=> setUsername(ev.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={ev=>setPassword(ev.target.value)}/>\n                <button>Login</button>\n            </form>\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,eAAeY,KAAKA,CAACC,EAAE,EAAC;IACpBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACvDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACd,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1Ca,OAAO,EAAC;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC5CC,WAAW,EAAC;IAChB,CAAC,CAAC;IACF,IAAGP,QAAQ,CAACQ,EAAE,EAAC;MACXZ,WAAW,CAAC,IAAI,CAAC;IACrB;EACJ;EACA,IAAGD,QAAQ,EAAC;IACR,oBAAOP,OAAA,CAACF,QAAQ;MAACuB,EAAE,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC/B;EACA,oBACIzB,OAAA;IAAA0B,QAAA,eACI1B,OAAA;MAAM2B,SAAS,EAAC,OAAO;MAACC,QAAQ,EAAEnB,KAAM;MAAAiB,QAAA,gBACpC1B,OAAA;QAAA0B,QAAA,EAAI;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdzB,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE5B,QAAS;QAAC6B,QAAQ,EAAEtB,EAAE,IAAGN,WAAW,CAACM,EAAE,CAACuB,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzGzB,OAAA;QAAO6B,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAE1B,QAAS;QAAC2B,QAAQ,EAAEtB,EAAE,IAAEJ,WAAW,CAACI,EAAE,CAACuB,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5GzB,OAAA;QAAA0B,QAAA,EAAQ;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACvB,EAAA,CA7BuBD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}